services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\Infrastructure\:
        resource: '../src/Infrastructure/'

    App\Application\:
        resource: '../src/Application/'
        exclude:
            - '../src/Application/Model/'
            - '../src/Application/Entity/'

    App\Domain\:
        resource: '../src/Domain/'
        exclude:
            - '../src/Domain/Model/'

    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller/'
        tags: ['controller.service_arguments']

    App\Infrastructure\Repository\DoctrineRepository:
        autowire: false

    inbox.doctrine.repository:
        class: App\Infrastructure\Repository\DoctrineRepository
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - App\Infrastructure\Entity\Inbox

    notification.doctrine.repository:
        class: App\Infrastructure\Repository\DoctrineRepository
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - App\Infrastructure\Entity\Notification

    outbox.doctrine.repository:
        class: App\Infrastructure\Repository\DoctrineRepository
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - App\Infrastructure\Entity\Outbox

    App\Infrastructure\Repository\InboxRepository:
        arguments:
            - '@inbox.doctrine.repository'

    App\Domain\Repository\InboxRepositoryInterface: '@App\Infrastructure\Repository\InboxRepository'
    
    App\Infrastructure\Repository\NotificationRepository:
        arguments:
            - '@notification.doctrine.repository'

    App\Domain\Repository\NotificationRepositoryInterface: '@App\Infrastructure\Repository\NotificationRepository'
    
    App\Infrastructure\Repository\OutboxRepository:
        arguments:
            - '@outbox.doctrine.repository'

    App\Domain\Repository\OutboxRepositoryInterface: '@App\Infrastructure\Repository\OutboxRepository'
        
    App\Application\Channel\Provider\Email\EmailProvider:
        arguments:
            - '@App\Infrastructure\Integration\AWS\SES\SendEmail'

    App\Application\Channel\Provider\Push\PushProvider:
        arguments:
            - '@App\Infrastructure\Integration\Pushy\SendPush'

    App\Application\Channel\Provider\SMS\SMSProvider:
        arguments:
            - '@App\Infrastructure\Integration\Twilio\SMS\SendSMS'

    App\Application\Channel\Provider\ProviderResolver:
        arguments:
            - '@App\Application\Channel\Provider\Email\EmailProvider'
            - '@App\Application\Channel\Provider\Push\PushProvider'
            - '@App\Application\Channel\Provider\SMS\SMSProvider'

    App\Infrastructure\Integration\Twilio\SMS\SendSMS:
        arguments:
            $accountSID: '%env(string:TWILIO_ACCOUNT_SID)%'
            $tokenAuth: '%env(string:TWILIO_TOKEN_AUTH)%'
            $senderPhoneNumber: '%env(string:TWILIO_SENDER_PHONE_NUMBER)%'

    App\Domain\Channel\Builder\ContentBuilder:
        arguments:
            - '@App\Domain\Channel\Builder\SMSContentBuilder'

    App\Domain\Channel\Resolver\ChannelsResolver:
        arguments:
            $enabledChannels: '%env(json:ENABLED_CHANNELS)%'

    App\Infrastructure\Integration\AuthService\Auth:
        arguments:
            $userPhoneNumber: '%env(string:TEST_USER_PHONE_NUMBER)%'
